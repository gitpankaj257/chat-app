{"ast":null,"code":"import _taggedTemplateLiteral from \"/var/www/html/chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  subscription($receiverMail: String!) {\\n    userTyping(receiverMail: $receiverMail)\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  subscription($receiverMail: String!) {\\n    newMessage(receiverMail: $receiverMail) {\\n      message\\n      senderMail\\n      receiverMail\\n      id\\n      timestamp\\n      users {\\n        name\\n        email\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation($email: String!, $receiverMail: String!) {\\n    userTyping(email: $email, receiverMail: $receiverMail)\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation(\\n    $message: String!\\n    $senderMail: String!\\n    $receiverMail: String!\\n    $timestamp: Float!\\n  ) {\\n    createMessage(\\n      message: $message\\n      senderMail: $senderMail\\n      receiverMail: $receiverMail\\n      timestamp: $timestamp\\n    ) {\\n      message\\n      senderMail\\n      receiverMail\\n      id\\n      timestamp\\n      users {\\n        name\\n        email\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    messages {\\n      id\\n      message\\n      senderMail\\n      receiverMail\\n      timestamp\\n      users {\\n        name\\n        email\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nconst MessageQuery = gql(_templateObject());\nconst CreateMessageMutation = gql(_templateObject2());\nconst UserTypingMutation = gql(_templateObject3());\nconst MessageSubscription = gql(_templateObject4());\nconst UserTypingSubscription = gql(_templateObject5());\nexport { MessageQuery, CreateMessageMutation, UserTypingMutation, MessageSubscription, UserTypingSubscription };","map":{"version":3,"sources":["/var/www/html/chat-app/client/src/Message-Query.js"],"names":["gql","MessageQuery","CreateMessageMutation","UserTypingMutation","MessageSubscription","UserTypingSubscription"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,MAAMC,YAAY,GAAGD,GAAH,mBAAlB;AAgBA,MAAME,qBAAqB,GAAGF,GAAH,oBAA3B;AA0BA,MAAMG,kBAAkB,GAAGH,GAAH,oBAAxB;AAMA,MAAMI,mBAAmB,GAAGJ,GAAH,oBAAzB;AAgBA,MAAMK,sBAAsB,GAAGL,GAAH,oBAA5B;AAMA,SACEC,YADF,EAEEC,qBAFF,EAGEC,kBAHF,EAIEC,mBAJF,EAKEC,sBALF","sourcesContent":["import gql from 'graphql-tag';\n\nconst MessageQuery = gql`\n  query {\n    messages {\n      id\n      message\n      senderMail\n      receiverMail\n      timestamp\n      users {\n        name\n        email\n      }\n    }\n  }\n`;\n\nconst CreateMessageMutation = gql`\n  mutation(\n    $message: String!\n    $senderMail: String!\n    $receiverMail: String!\n    $timestamp: Float!\n  ) {\n    createMessage(\n      message: $message\n      senderMail: $senderMail\n      receiverMail: $receiverMail\n      timestamp: $timestamp\n    ) {\n      message\n      senderMail\n      receiverMail\n      id\n      timestamp\n      users {\n        name\n        email\n      }\n    }\n  }\n`;\n\nconst UserTypingMutation = gql`\n  mutation($email: String!, $receiverMail: String!) {\n    userTyping(email: $email, receiverMail: $receiverMail)\n  }\n`;\n\nconst MessageSubscription = gql`\n  subscription($receiverMail: String!) {\n    newMessage(receiverMail: $receiverMail) {\n      message\n      senderMail\n      receiverMail\n      id\n      timestamp\n      users {\n        name\n        email\n      }\n    }\n  }\n`;\n\nconst UserTypingSubscription = gql`\n  subscription($receiverMail: String!) {\n    userTyping(receiverMail: $receiverMail)\n  }\n`;\n\nexport {\n  MessageQuery,\n  CreateMessageMutation,\n  UserTypingMutation,\n  MessageSubscription,\n  UserTypingSubscription\n};\n"]},"metadata":{},"sourceType":"module"}