{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/var/www/html/chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/var/www/html/chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/chat-app/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport User from './User';\nimport Message from './Message';\nimport Registration from './Frontpage';\nimport { graphql, compose } from 'react-apollo';\nimport { UserQuery, CreateUserMutation, DeleteUserMutation, AddUserSubscription, DeleteUserSubscription } from './User-Query';\n\nconst App = props => {\n  const user = localStorage.getItem('token') && JSON.parse(localStorage.getItem('token')) || {};\n\n  const _useState = useState({\n    receiverMail: '',\n    receiverName: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        receiverState = _useState2[0],\n        setReceiverState = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userLeft = _useState4[0],\n        setUserLeft = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        hidden = _useState6[0],\n        setHidden = _useState6[1];\n\n  const setSelectedMail = (mail, user) => {\n    setReceiverState(receiverState => {\n      return _objectSpread({}, receiverState, {\n        receiverMail: mail,\n        receiverName: user\n      });\n    });\n    setHidden(!hidden);\n  };\n\n  const setStyle = () => {\n    setHidden(!hidden);\n  };\n\n  useEffect(() => {\n    const subscribeToMore = props.data.subscribeToMore;\n    subscribeToMore({\n      document: AddUserSubscription,\n      updateQuery: (prev, {\n        subscriptionData\n      }) => {\n        if (!subscriptionData.data) return prev;\n        const user = subscriptionData.data.newUser;\n\n        if (!prev.users.find(x => x.id === user.id)) {\n          return _objectSpread({}, prev, {\n            users: [...prev.users, user]\n          });\n        }\n\n        return prev;\n      }\n    });\n    subscribeToMore({\n      document: DeleteUserSubscription,\n      updateQuery: (prev, {\n        subscriptionData\n      }) => {\n        if (!subscriptionData.data) return prev;\n        const oldUser = subscriptionData.data.oldUser;\n\n        if (prev.users.some(x => x.email === oldUser)) {\n          const newUsers = prev.users.filter(x => x.email !== oldUser);\n          prev.users = newUsers;\n          return prev;\n        }\n\n        setUserLeft(oldUser);\n        return prev;\n      }\n    });\n  }, [props.data]);\n\n  const createUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, name) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return props.createUser({\n              variables: {\n                email,\n                name\n              },\n              update: (store, {\n                data: {\n                  createUser\n                }\n              }) => {\n                const data = store.readQuery({\n                  query: UserQuery\n                });\n\n                if (!data.users.find(x => x.id === createUser.id)) {\n                  data.users.push(createUser);\n                }\n\n                store.writeQuery({\n                  query: UserQuery,\n                  data\n                });\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function createUser(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const deleteUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            localStorage.removeItem('token');\n            _context2.next = 3;\n            return props.deleteUser({\n              variables: {\n                email\n              },\n              update: store => {\n                const data = store.readQuery({\n                  query: UserQuery\n                });\n                data.users = data.users.filter(x => x.email !== email);\n                store.writeQuery({\n                  query: UserQuery,\n                  data\n                });\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function deleteUser(_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const receiverMail = receiverState.receiverMail,\n        receiverName = receiverState.receiverName;\n  const _props$data = props.data,\n        users = _props$data.users,\n        error = _props$data.error,\n        loading = _props$data.loading;\n  if (loading || error) return null;\n\n  if (localStorage.getItem('token')) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(User, {\n      style: {\n        display: hidden ? 'none' : 'block'\n      },\n      users: users,\n      email: user.email,\n      name: user.name,\n      selectedMail: setSelectedMail,\n      deleteUser: deleteUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Message, {\n      style: {\n        display: hidden ? 'block' : 'none'\n      },\n      email: user.email,\n      receiverMail: receiverMail,\n      receiverName: receiverName,\n      userLeft: userLeft,\n      name: user.name,\n      setStyle: setStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Registration, {\n    users: users,\n    createUser: createUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default compose(graphql(UserQuery), graphql(CreateUserMutation, {\n  name: 'createUser'\n}), graphql(DeleteUserMutation, {\n  name: 'deleteUser'\n}))(App);","map":{"version":3,"sources":["/var/www/html/chat-app/client/src/App.js"],"names":["React","useState","useEffect","User","Message","Registration","graphql","compose","UserQuery","CreateUserMutation","DeleteUserMutation","AddUserSubscription","DeleteUserSubscription","App","props","user","localStorage","getItem","JSON","parse","receiverMail","receiverName","receiverState","setReceiverState","userLeft","setUserLeft","hidden","setHidden","setSelectedMail","mail","setStyle","subscribeToMore","data","document","updateQuery","prev","subscriptionData","newUser","users","find","x","id","oldUser","some","email","newUsers","filter","createUser","name","variables","update","store","readQuery","query","push","writeQuery","deleteUser","removeItem","error","loading","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport User from './User';\nimport Message from './Message';\nimport Registration from './Frontpage';\nimport { graphql, compose } from 'react-apollo';\nimport {\n  UserQuery,\n  CreateUserMutation,\n  DeleteUserMutation,\n  AddUserSubscription,\n  DeleteUserSubscription\n} from './User-Query';\n\nconst App = props => {\n  const user =\n    (localStorage.getItem('token') &&\n      JSON.parse(localStorage.getItem('token'))) ||\n    {};\n\n  const [receiverState, setReceiverState] = useState({\n    receiverMail: '',\n    receiverName: ''\n  });\n\n  const [userLeft, setUserLeft] = useState('');\n\n  const [hidden, setHidden] = useState(false);\n\n  const setSelectedMail = (mail, user) => {\n    setReceiverState(receiverState => {\n      return { ...receiverState, receiverMail: mail, receiverName: user };\n    });\n    setHidden(!hidden);\n  };\n\n  const setStyle = () => {\n    setHidden(!hidden);\n  };\n\n  useEffect(() => {\n    const subscribeToMore = props.data.subscribeToMore;\n    subscribeToMore({\n      document: AddUserSubscription,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n        const user = subscriptionData.data.newUser;\n        if (!prev.users.find(x => x.id === user.id)) {\n          return { ...prev, users: [...prev.users, user] };\n        }\n        return prev;\n      }\n    });\n    subscribeToMore({\n      document: DeleteUserSubscription,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n        const oldUser = subscriptionData.data.oldUser;\n        if (prev.users.some(x => x.email === oldUser)) {\n          const newUsers = prev.users.filter(x => x.email !== oldUser);\n          prev.users = newUsers;\n          return prev;\n        }\n        setUserLeft(oldUser);\n        return prev;\n      }\n    });\n  }, [props.data]);\n\n  const createUser = async (email, name) => {\n    await props.createUser({\n      variables: {\n        email,\n        name\n      },\n      update: (store, { data: { createUser } }) => {\n        const data = store.readQuery({ query: UserQuery });\n        if (!data.users.find(x => x.id === createUser.id)) {\n          data.users.push(createUser);\n        }\n        store.writeQuery({ query: UserQuery, data });\n      }\n    });\n  };\n\n  const deleteUser = async email => {\n    localStorage.removeItem('token');\n    await props.deleteUser({\n      variables: { email },\n      update: store => {\n        const data = store.readQuery({ query: UserQuery });\n        data.users = data.users.filter(x => x.email !== email);\n        store.writeQuery({ query: UserQuery, data });\n      }\n    });\n  };\n\n  const { receiverMail, receiverName } = receiverState;\n  const {\n    data: { users, error, loading }\n  } = props;\n\n  if (loading || error) return null;\n  if (localStorage.getItem('token')) {\n    return (\n      <div className=\"chat-page\">\n        <User\n          style={{ display: hidden ? 'none' : 'block' }}\n          users={users}\n          email={user.email}\n          name={user.name}\n          selectedMail={setSelectedMail}\n          deleteUser={deleteUser}\n        />\n        <Message\n          style={{ display: hidden ? 'block' : 'none' }}\n          email={user.email}\n          receiverMail={receiverMail}\n          receiverName={receiverName}\n          userLeft={userLeft}\n          name={user.name}\n          setStyle={setStyle}\n        />\n      </div>\n    );\n  }\n  return <Registration users={users} createUser={createUser} />;\n};\n\nexport default compose(\n  graphql(UserQuery),\n  graphql(CreateUserMutation, { name: 'createUser' }),\n  graphql(DeleteUserMutation, { name: 'deleteUser' })\n)(App);\n"]},"metadata":{},"sourceType":"module"}