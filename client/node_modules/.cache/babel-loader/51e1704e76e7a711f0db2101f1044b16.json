{"ast":null,"code":"import _taggedTemplateLiteral from \"/var/www/html/chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  subscription {\\n    oldUser\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  subscription {\\n    newUser {\\n      name\\n      email\\n      id\\n      messages {\\n        message\\n        senderMail\\n        receiverMail\\n        timestamp\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation($email: String!) {\\n    deleteUser(email: $email)\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation($name: String!, $email: String!) {\\n    createUser(name: $name, email: $email) {\\n      name\\n      email\\n      id\\n      messages {\\n        message\\n        senderMail\\n        receiverMail\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    users {\\n      id\\n      name\\n      email\\n      messages {\\n        message\\n        senderMail\\n        receiverMail\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nconst UserQuery = gql(_templateObject());\nconst CreateUserMutation = gql(_templateObject2());\nconst DeleteUserMutation = gql(_templateObject3());\nconst AddUserSubscription = gql(_templateObject4());\nconst DeleteUserSubscription = gql(_templateObject5());\nexport { UserQuery, CreateUserMutation, DeleteUserMutation, AddUserSubscription, DeleteUserSubscription };","map":{"version":3,"sources":["/var/www/html/chat-app/client/src/User-Query.js"],"names":["gql","UserQuery","CreateUserMutation","DeleteUserMutation","AddUserSubscription","DeleteUserSubscription"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,MAAMC,SAAS,GAAGD,GAAH,mBAAf;AAeA,MAAME,kBAAkB,GAAGF,GAAH,oBAAxB;AAeA,MAAMG,kBAAkB,GAAGH,GAAH,oBAAxB;AAMA,MAAMI,mBAAmB,GAAGJ,GAAH,oBAAzB;AAgBA,MAAMK,sBAAsB,GAAGL,GAAH,oBAA5B;AAMA,SACEC,SADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,mBAJF,EAKEC,sBALF","sourcesContent":["import gql from 'graphql-tag';\n\nconst UserQuery = gql`\n  query {\n    users {\n      id\n      name\n      email\n      messages {\n        message\n        senderMail\n        receiverMail\n      }\n    }\n  }\n`;\n\nconst CreateUserMutation = gql`\n  mutation($name: String!, $email: String!) {\n    createUser(name: $name, email: $email) {\n      name\n      email\n      id\n      messages {\n        message\n        senderMail\n        receiverMail\n      }\n    }\n  }\n`;\n\nconst DeleteUserMutation = gql`\n  mutation($email: String!) {\n    deleteUser(email: $email)\n  }\n`;\n\nconst AddUserSubscription = gql`\n  subscription {\n    newUser {\n      name\n      email\n      id\n      messages {\n        message\n        senderMail\n        receiverMail\n        timestamp\n      }\n    }\n  }\n`;\n\nconst DeleteUserSubscription = gql`\n  subscription {\n    oldUser\n  }\n`;\n\nexport {\n  UserQuery,\n  CreateUserMutation,\n  DeleteUserMutation,\n  AddUserSubscription,\n  DeleteUserSubscription\n};\n"]},"metadata":{},"sourceType":"module"}